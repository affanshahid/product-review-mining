package productreviewmining;

import productreviewmining.featureextraction.FeatureExtractor;
import productreviewmining.util.Tokenizers;
import productreviewmining.polarity.Polarity;

import org.json.JSONArray;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.stream.Collectors;
import java.util.List;

import java.nio.file.Paths;
import java.nio.file.Path;
import java.nio.file.Files;
import java.nio.charset.StandardCharsets;

import java.io.File;
import java.io.IOException;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public static void main(String[] args) throws IOException {

        // String labrinthReview = String.join("\n", Files
        //         .readAllLines(Paths.get("./build/resources/main/samples/nikon-sample.txt")));
        try {
            Collection<List<String>> database = loadReviewDatabase(Paths.get(
                    "/Users/affan/Desktop/Machine Learning Projects/Product Review Mining/build/resources/main/reviews/AMAZON-Apple-Factory-Unlocked-Internal-Smartphone-B00NQGP42Y.json"));

            // List<String> sentences = Arrays.asList(Tokenizers.sentenceDetector.sentDetect(labrinthReview));
            Collection<List<String>> subjectiveSentences = database.stream()
                    .filter((s) -> Polarity.calculateSentencePolarity(s) > 0).collect(Collectors.toList());
            FeatureExtractor fe = new FeatureExtractor(database, 3);
            for (List<String> sent : subjectiveSentences) {
                System.out.println(sent);
            }
            System.out.println(fe.getFeatures());
        } catch (IOException ex) {
            System.err.println(ex);
        }

    }
    
    public static Collection<List<String>> loadReviewDatabase(Path jsonFilePath) throws IOException {
        Collection<List<String>> reviewDatabase = new ArrayList<>();
        JSONArray reviews = new JSONArray(String.join("\n", Files.readAllLines(jsonFilePath, StandardCharsets.UTF_8)));
        for (int i = 0; i < reviews.length(); i++) {
            JSONObject review = reviews.getJSONObject(i);
            String[] sents = Tokenizers.sentenceDetector.sentDetect(review.getString("text"));
            for (String sent : sents) {
                reviewDatabase.add(Arrays.asList(Tokenizers.tokenizer.tokenize(sent)));
            }
        }

        return reviewDatabase;
    }
}
