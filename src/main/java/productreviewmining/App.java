package productreviewmining;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;

import productreviewmining.semanticorientation.PhraseExtraction;
import productreviewmining.util.Tokenizers;
import productreviewmining.polarity.Polarity;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public static void main(String[] args) throws IOException {

        String labrinthReview = String.join("\n", Files
                .readAllLines(Paths.get("./build/resources/main/samples/nikon-sample.txt")));

        List<String> sentences = Arrays.asList(Tokenizers.sentenceDetector.sentDetect(labrinthReview));
        List<String> subjectiveSentences = sentences
                .stream()
                .filter((s) -> Polarity.calculateSentencePolarity(s) >= 0)
                .collect(Collectors.toList());

        for(String sent: subjectiveSentences) {
            String[] tokenized = Tokenizers.tokenizer.tokenize(sent);
            String[] phrases = PhraseExtraction.getPhrases(tokenized);
            System.out.println(sent);
            System.out.println(Arrays.asList(phrases));
        }
    }
}
